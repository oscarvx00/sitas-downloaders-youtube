FROM python:3.8-slim-buster
WORKDIR /sitas-dl-yt-test

RUN pip3 install pytest pytest-mock mock pytest-coverage requests

COPY ./src ./
RUN pip3 install -r requirements.txt

ARG AZURE_SERVICE_BUS_CONNECTION_STRING
ARG AZURE_SERVICE_BUS_DOWNLOAD_REQUEST_YOUTUBE_QUEUE
ARG AZURE_SERVICE_BUS_DOWNLOAD_REQUEST_QUEUE
ARG AZURE_SERVICE_BUS_DOWNLOAD_COMPLETED_QUEUE
ARG DOWNLOAD_REQUEST_EXCHANGE
ARG DOWNLOAD_REQUEST_YOUTUBE_QUEUE
ARG DOWNLOAD_COMPLETED_EXCHANGE
ARG MINIO_INTERNAL_ENDPOINT
ARG MINIO_INTERNAL_PORT
ARG MINIO_INTERNAL_USER
ARG MINIO_INTERNAL_PASS
ARG MINIO_INTERNAL_BUCKET
ARG YOUTUBE_API_KEY

ENV AZURE_SERVICE_BUS_CONNECTION_STRING=${AZURE_SERVICE_BUS_CONNECTION_STRING}
ENV AZURE_SERVICE_BUS_DOWNLOAD_REQUEST_YOUTUBE_QUEUE=${AZURE_SERVICE_BUS_DOWNLOAD_REQUEST_YOUTUBE_QUEUE}
ENV AZURE_SERVICE_BUS_DOWNLOAD_REQUEST_QUEUE=${AZURE_SERVICE_BUS_DOWNLOAD_REQUEST_QUEUE}
ENV AZURE_SERVICE_BUS_DOWNLOAD_COMPLETED_QUEUE=${AZURE_SERVICE_BUS_DOWNLOAD_COMPLETED_QUEUE}
ENV DOWNLOAD_REQUEST_EXCHANGE=${DOWNLOAD_REQUEST_EXCHANGE}
ENV DOWNLOAD_REQUEST_YOUTUBE_QUEUE=${DOWNLOAD_REQUEST_YOUTUBE_QUEUE}
ENV DOWNLOAD_COMPLETED_EXCHANGE=${DOWNLOAD_COMPLETED_EXCHANGE}
ENV MINIO_INTERNAL_ENDPOINT=${MINIO_INTERNAL_ENDPOINT}
ENV MINIO_INTERNAL_PORT=${MINIO_INTERNAL_PORT}
ENV MINIO_INTERNAL_USER=${MINIO_INTERNAL_USER}
ENV MINIO_INTERNAL_PASS=${MINIO_INTERNAL_PASS}
ENV MINIO_INTERNAL_BUCKET=${MINIO_INTERNAL_BUCKET}
ENV YOUTUBE_API_KEY=${YOUTUBE_API_KEY}

ENTRYPOINT [ "python3", "-m", "pytest", "--cov-report", "xml:coverage.xml", "--cov=./" ]